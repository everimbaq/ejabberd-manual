proxy->ejabberd
		<<"Register">> -> handle_register(From, To, ID, SubEl);
			1.NewQQUser = #qq_user{qq_id=QQNo, user=From#jid.luser, server=From#jid.lserver, type=internal} 保存到qq_user表中  save_qq_user(NewQQUser)
			2.检查是否存在该qq的agent进程,有就删除; check_qqagent_delete(QQNo),
			3.返回结果给proxy ejabberd_router:route(To, From, jlib:iq_to_xml(IQRsp))

		<<"Friends">> -> finsert_roster(From, To, ID, SubEl);
			外部好友,以默认密码和当前server注册一个dm用户，保存到qq_user表,并启动该qq的agent进程,设置为好友
				1.NewQQUser = #qq_user{qq_id=QQNo, user=QQName, server=Server, type=external}, save_qq_user(NewQQUser)
				2.注册 ejabberd_auth:try_register(QQName,Server, ?BOT_PSW)
				3.启动agent  mod_qq_agent:start_link({NewQQUser#qq_user.qq_id, NewQQUser#qq_user.user, NewQQUser#qq_user.server, ?PROXY_RESOURCE}),
				4.加为好友 make_buddy(User, Server, Buddy#qq_user.user, Buddy#qq_user.server, GroupName, Buddy#qq_user.type),
			% ？vcard干什么的 
			内部好友，设为好友
				make_buddy
			% mod_roster:update_roster_t(User, Server, JID, Item)  detail



		<<"presence">> -> handle_presence(finsert_roster(From, SubEl), 	xml:get_tag_attr_s(<<"status">>, SubEl), {From, To} );
		external presence
			online-user
			1.更改用户状态 save user state
			2.给该ol-user的进程发消息，让他向其他人发送presence消息
			not online 
			% （离线好友不显示?)
			1.注册qq_agent进程 
			%% 是否会重复注册了qq的多个agent
			2.send presence
		internal presence(已经是DM用户)
			available    
			1.更新该用户到online_qq_user表 save_online_qq_user(QQUser, internal, available/unavailable)
			2.force_update



		<<"mr_friend">> -> handle_message(From, SubEl);
		消息以FJID = jlib:make_jid(FUser#qq_user.user, FUser#qq_user.server, ?PROXY_RESOURCE)的名义发给相关用户



		<<"TroopInfo">> -> handle_new_room(From, SubEl);
		1.创建room,固定格式，默认创建者mod_muc:create_room(FServer, Room, Creator, Nick, Config)
		2.将该用户注册为管理员 register_room_affiliation(R#muc_online_room.pid, Member, FUser, <<"admin">>),
		3.保存到qq_room表、muc_room表、muc_online_room表    save_qq_room(#qq_room{qq_room_id=RoomId, name_host={Room, Host}}





		<<"TroopMemberInfo">> -> handle_room_presence(From, SubEl);
		该用户
		1.确保有该用户(没有则注册为DM用户) 
			NewQQUser = #qq_user{qq_id=QQNo, user=QQNo, server=Server, type=external},
			ejabberd_auth:try_register(QQNo, Server, ?BOT_PSW),
		2.保存到qq_user表 save_qq_user(NewQQUser),
		3.创建agent进程 supervisor:start_child(mod_qq_agent_sup, [{NewQQUser#qq_user.qq_id, NewQQUser#qq_user.user, NewQQUser#qq_user.server, ?PROXY_RESOURCE}])

		该房间
		1.添加用户到房间成员 register_room_affiliation(R#muc_online_room.pid, Member, RoomUser#qq_user.user, <<"admin">>)
		2.将用户presence消息发送到房间  			
			PresentXml = #xmlel{name = <<"presence">>, attrs = [{<<"from">>, jlib:jid_to_string(FJID)}, {<<"to">>, ToRoom}], 
			children = [ #xmlel{ name = <<"x">> , attrs = [{<<"xmlns">>, ?NS_MUC}], children = []}]}



		<<"mr_troop">> -> handle_room_message(From, SubEl);
		1.去重 gen_server:call(Proc, {duplicate_check, QQRoomId, Uniqueid}, ?SERVER_CALL_TIMEOUT)
		2.确保qq和room都已经存在
		3.以该用户的名义发送消息到房间




DM 发消息给 QQ 
	1.发送给该QQ的Pxoxy进程
	2.c2s_filter_packet_in, 发现对方进程是proxy_resource，将packet改为包含qqno和msg的包，转发给当前From对应的Proxy,即route(From,FromProxyJid,Packet)
	3.该ProxyJid接收Packet(运行在虚拟机上，通过DMproxy、uictrl接收发送给qq)